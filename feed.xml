<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://laciechang.github.io/</id><title>小黄灯</title><subtitle>你想了解的技术细节可能在这里</subtitle> <updated>2021-05-15T23:26:24+08:00</updated> <author> <name>lacie_chang</name> <uri>https://laciechang.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://laciechang.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://laciechang.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 lacie_chang </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>欢迎来到小黄灯主题站</title><link href="https://laciechang.github.io/posts/please-read-me/" rel="alternate" type="text/html" title="欢迎来到小黄灯主题站" /><published>2021-05-15T18:09:30+08:00</published> <updated>2021-05-15T23:25:49+08:00</updated> <id>https://laciechang.github.io/posts/please-read-me/</id> <content src="https://laciechang.github.io/posts/please-read-me/" /> <author> <name>张来吃</name> </author> <category term="必读" /> <summary> 我是谁我在哪我要干嘛 突然有一天我意识到一个问题…… 无论在公众号还是微博B站等平台，小黄灯的内容都会被无数更多新鲜丰富的其他咨询冲走 然鹅最开始我想为大家提供的，仿佛一个工具书一般，或者积攒了各种使用技巧，无论你用不用得上，的一个集中汇总地带。 作为观众，可以在这里随便点开看看，也可以有针对性的尝试对一些关键词进行搜索。 结果来到了这里？ 所以我最后找到一个传统一点的办法，就是在这里，通过一个类似传统blog的形式为大家集中提供一个访问方式。 那这里跟公众号有什么区别 最根本的区别在于更新内容的倾向性不同，公众号我还是会保持为小黄灯内容的首发地，而这个独立的小站则希望留在大家的收藏夹中，方便大家在网页中便捷地浏览和查找。 那你岂不是得准备两份？ 众所周知我是个懒人，由于这个小站的维护并不如公众号那般便捷，因此我也在摸索一些二者有机结合的更好的玩法…… 比如这里可以是一... </summary> </entry> <entry><title>【达芬奇jio本系列】在吗?渲染完成了</title><link href="https://laciechang.github.io/posts/notice-by-dingding-after-render/" rel="alternate" type="text/html" title="【达芬奇jio本系列】在吗?渲染完成了" /><published>2021-05-05T00:09:30+08:00</published> <updated>2021-05-05T23:02:13+08:00</updated> <id>https://laciechang.github.io/posts/notice-by-dingding-after-render/</id> <content src="https://laciechang.github.io/posts/notice-by-dingding-after-render/" /> <author> <name>张来吃</name> </author> <category term="达芬奇jio本系列" /> <summary> *本期内容可能需要安装额外的Python库    感觉这是一篇来晚了的文章……why   熟悉小黄灯的朋友们都知道，老早之前就为大家介绍过，我们可以借助 Python API 来干很多事，当时也向大家展示了一些可实现的内容（详情请点击）    在其中有个flag立好但迟迟没有下文的渲染监视工具👇     工程为何逐渐烂尾 脚本为何蒙上灰尘 是__的沦丧 还是___的扭曲？       这一切的背后到底是因为……                  🌚达芬奇17自带了啊朋友们🌚         所以问题就变成了        “我都用17这么久了哪看到有你说的这玩意”   所以新增的一大堆功能里面，在渲染设置里一个不起眼的位置上，为我们提供一个渲染任务触发器的一个设计。也就是说可以指定达芬奇在开始或结束渲染时，自... </summary> </entry> <entry><title>【达芬奇jio本系列】自动设定IO点添加渲染任务</title><link href="https://laciechang.github.io/posts/test-page/" rel="alternate" type="text/html" title="【达芬奇jio本系列】自动设定IO点添加渲染任务" /><published>2021-05-04T00:35:00+08:00</published> <updated>2021-05-04T00:39:00+08:00</updated> <id>https://laciechang.github.io/posts/test-page/</id> <content src="https://laciechang.github.io/posts/test-page/" /> <author> <name>张来吃</name> </author> <category term="达芬奇jio本系列" /> <summary> 阅读以下内容之前请先确认 您已经了解本文所述的工作流程可能给您带来的影响 “我们又遇到一个新的问题” 达芬奇中 individual clip 的渲染方式虽然可以满足绝大多数交付要求，但总是会遇到一些 特殊情况，例如需要满足诸如 🎞️渲染逐个镜头 带上例如变速、合成等效果🎞️ 这样的交付方式。过去可能需要将他们例如挨个做好复合片段，才可以使用 individual clip 模式添加渲染任务；要么就只能一个个手动设定IO点。 通常情况下确实并不建议这类方法来交付，暂且不说这一需求本身的合理性，这样的方式作为某种交付方法可能还会给大家带来某些不必要的麻烦。 但考虑到总有不得已的情况，因此我就写了这么一个工具来帮助大家。 </summary> </entry> </feed>
